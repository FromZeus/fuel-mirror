#!/bin/bash

# This shell script was written in order to help you to create and maintain your
# local mirrors of MOS and/or Ubuntu. You could use this script as a cron job.
# Dependencies: rsync, wget, gpg, docker + dpkg-dev (only for partial Ubuntu mirror)

usage(){
cat <<EOF
Usage: fuel-createmirror [-h|--help] | [mos|ubuntu]
Create and update local mirrors of MOS and/or Ubuntu.

USAGE
-----

   -h| --help      This help screen.

Actions could be one of:

   mos             Create/Update MOS local mirror only
   ubuntu          Create/Update Ubuntu local mirror only

If no parameters specified, script will Create/Update both MOS and
Ubuntu mirrors.

Script will print directory names which can be used as respective
repository URLs on the "Settings" page of cluster setup, i.e. 

    http://FUEL_SERVER:8080/ubuntu-part

CUSTOMIZATION
-------------

The following configuration directives could be used to modify the
script behavior.

$BINROOT/conf/common.cfg:

    FUEL_VERSION - set the current Fuel version here. If running on
		   Fuel node, script will autodetect Fuel version,
		   otherwize you should set the version manually.

$BINROOT/conf/ubuntu.cfg:

    UPSTREAM - hostname of Ubuntu mirror. Only rsync mirrors are
	       supported!

    PARTIAL_UPSTREAM:
	    0 - script will mirror all packages from specified distibutions
		and components. Upstream mirror structure will be preserved.
	    1 - (default) script will download only packages required for
		MOS. Script will create partial repository with the "main"
		component only, original mirror structure will not be preserved.

EOF
}

die() { echo "$@" 1>&2 ; exit 1; }

print_repositories_ubuntu() {
    echo -e " * INFO: In order to setup these repositories MANUALLY, you should"
    echo -e "         go to Fuel UI, choose your cluster and go to the 'Settings' tab"
    if [ "$PARTIAL_UPSTREAM" == "0" ]; then
	echo -e "         Replace the URI value for the following repositories:"
	for dist in "${DISTs[@]}"; do
	    echo -e "         Repository \"$dist\" URI=\"deb http://$FUEL_SERVER:8080/$1 $dist ${DIST_COMPONENTs[$dist]}\""
	done
    else
	echo -e "         REMOVE all repositories named \"ubuntu-*\" and change URI for the following one:"
	echo
	echo -e "         Repository \"ubuntu\" new URI=\"deb http://$FUEL_SERVER:8080/$1 ${DISTs[0]} main\""
    fi
    echo
}

add_repositories_to_nailgun() {
# parameters:
# $1 - release_id for fuel env
# $2 - distro name in fuel-package-updates format
# $3 - directory name of local repository
    echo " * INFO: Attempting to add created repositories to Nailgun..."
    # find envs with status "new" and with given release_id
    local release_id=$1
    local extraopts=""
    [ "$PARTIAL_UPSTREAM" == "1" ] && extraopts=" --clear-upstream-repos "
    envs=`fuel env 2>&1 | grep -w new | awk -v release_id=$release_id -F'|' '$5 == release_id {print $1}'`
    for env in ${envs}; do
        fuel-package-updates -d $2 -r $FULL_RELEASE --no-download --apply --make-default \
        -s $FUEL_SERVER -p "$FUEL_ADMIN_PASS" -b http://$FUEL_SERVER:8080/$3 -e $env $extraopts 2>/dev/null
	EC_FPU=$?
	if [[ "$EC_FPU" == "0" ]]; then
	    echo " * INFO: environment id=$env updated successfully, no manual actions is required"
	else
	    echo " * WARNING: Failed to add repositories for environment id=$env to Nailgun, please add them MANUALLY"
	    EC_ADD=1
	fi
    done
    [ "$EC_ADD" == "1" ] && print_repositories_ubuntu $3
}

BINROOT=$(dirname `readlink -f "$0"`)

if [[ ( "$1" == "--help" ) ||  ( "$1" == "-h" ) ]]; then 
    usage
    exit 0
fi 

. $BINROOT/config/common.cfg

mkdir -p ${MIRROR_ROOT} || die "Cannot create ${MIRROR_ROOT}, exiting."
mkdir -p ${LOG_ROOT} || die "Cannot create ${LOG_ROOT}, exiting."

EC=0

if [[ "$1" != "ubuntu" ]]; then
    $BINROOT/deb-mirror $BINROOT/config/mos-ubuntu-updatesonly.cfg
    EC_MOS=$?
fi

if [[ "$1" != "mos" ]]; then
    $BINROOT/deb-mirror $BINROOT/config/ubuntu.cfg
    EC_UBUNTU=$?
fi

if [[ "$1" != "ubuntu" ]]; then
    if [[ "$EC_MOS" == "0" ]]; then
	. $BINROOT/config/mos-ubuntu-updatesonly.cfg
	echo " * INFO: MOS mirror was created at: $LOCAL_DIR"
	if [[ "$DOCKER_MODE" == "true" ]]; then
	    add_repositories_to_nailgun 2 ubuntu ${LOCAL_DIR##*/}
	else
	    print_repositories_ubuntu ${LOCAL_DIR##*/}
	fi
    else
	echo " * FATAL: Creation of MOS mirror FAILED, check logs at $LOG_ROOT"
	EC=1
    fi
fi
if [[ "$1" != "mos" ]]; then
    if [[ "$EC_UBUNTU" == "0" ]]; then
	. $BINROOT/config/ubuntu.cfg
	if [[ $PARTIAL_UPSTREAM = "1" ]]; then
	    echo " * INFO: Ubuntu partial mirror was created at: $PARTIAL_UPSTREAM_PATH"
	    if [[ "$DOCKER_MODE" == "true" ]]; then
		add_repositories_to_nailgun 2 ubuntu-baseos ${PARTIAL_UPSTREAM_PATH##*/}
	    else
		print_repositories_ubuntu ${PARTIAL_UPSTREAM_PATH##*/}
	    fi
	else
	    echo " * INFO: Ubuntu mirror was created at: $LOCAL_DIR"
	    if [[ "$DOCKER_MODE" == "true" ]]; then
		add_repositories_to_nailgun 2 ubuntu-baseos ${LOCAL_DIR##*/}
	    else
		print_repositories_ubuntu ${LOCAL_DIR##*/}
	    fi
	fi
    else
	echo " * FATAL: Creation of Ubuntu mirror FAILED, check logs at $LOG_ROOT"
	EC=1
    fi
fi

exit $EC
